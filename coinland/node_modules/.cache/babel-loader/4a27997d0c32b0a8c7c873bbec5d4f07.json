{"ast":null,"code":"var _jsxFileName = \"/Users/nabizadeh.se/Documents/Mina kurser/Frontend/Web Projekt/Coinland/startup/src/context/TransactionContext.js\";\nimport React, { createContext, Component } from \"react\";\n/* import { ethers } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { contractABI, contractAddress } from \"../utils/constans\";\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionContext = createContext;\n/* const { ethereum } = window; */\n\n/* window.ethereum; */\n\n/* const getEthereumContract = () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSinger();\n  const TransactionContract = new ethers.Contract(\n    contractAddress,\n    contractABI,\n    signer\n  );\n  console.log(provider, signer, TransactionContract);\n}; */\n\nclass TransactionProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isLightTheme: true,\n      light: {\n        syntax: \"yea\"\n      },\n      dard: {\n        syntax: \"no\"\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n      value: { ...this.state\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TransactionProvider;\n/* export default function App(children) {\n  return (\n    <TransactionContext.Provider value=\"test\">\n      {children}\n    </TransactionContext.Provider>\n  );\n} */","map":{"version":3,"sources":["/Users/nabizadeh.se/Documents/Mina kurser/Frontend/Web Projekt/Coinland/startup/src/context/TransactionContext.js"],"names":["React","createContext","Component","TransactionContext","TransactionProvider","state","isLightTheme","light","syntax","dard","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,kBAAkB,GAAGF,aAA3B;AACP;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,mBAAN,SAAkCF,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CG,KAD0C,GAClC;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFD;AAGNC,MAAAA,IAAI,EAAE;AAAED,QAAAA,MAAM,EAAE;AAAV;AAHA,KADkC;AAAA;;AAM1CE,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,MAAA,KAAK,EAAE,EAAE,GAAG,KAAKL;AAAV,OAApC;AAAA,gBACG,KAAKM,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAZyC;;AAc5C,eAAeR,mBAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { createContext, Component } from \"react\";\n/* import { ethers } from \"ethers\";\nimport { useEffect, useState } from \"react\";\nimport { contractABI, contractAddress } from \"../utils/constans\";\n */\nexport const TransactionContext = createContext;\n/* const { ethereum } = window; */\n/* window.ethereum; */\n\n/* const getEthereumContract = () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSinger();\n  const TransactionContract = new ethers.Contract(\n    contractAddress,\n    contractABI,\n    signer\n  );\n  console.log(provider, signer, TransactionContract);\n}; */\n\nclass TransactionProvider extends Component {\n  state = {\n    isLightTheme: true,\n    light: { syntax: \"yea\" },\n    dard: { syntax: \"no\" },\n  };\n  render() {\n    return (\n      <TransactionContext.Provider value={{ ...this.state }}>\n        {this.props.children}\n      </TransactionContext.Provider>\n    );\n  }\n}\nexport default TransactionProvider;\n\n/* export default function App(children) {\n  return (\n    <TransactionContext.Provider value=\"test\">\n      {children}\n    </TransactionContext.Provider>\n  );\n} */\n"]},"metadata":{},"sourceType":"module"}