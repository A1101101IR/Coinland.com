{"ast":null,"code":"var _jsxFileName = \"/Users/nabizadeh.se/Documents/Mina kurser/Frontend/Web Projekt/Coinland/startup/src/contexts/ThemeContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, Component } from \"react\";\nimport { ethers } from \"ethers\";\nimport { contractABI, contractAddress } from \"../utils/constans\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionContext = /*#__PURE__*/createContext();\nconst {\n  ethereum\n} = window;\n/* window.ethereum; */\n\nconst getEthereumContract = () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSinger();\n  const TransactionContract = new ethers.Contract(contractAddress, contractABI, signer);\n  console.log(provider, signer, TransactionContract);\n};\n\nconst TransactionProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n\n  const checkWallet = async () => {\n    if (!ethereum) return alert(\"obs, install metamask!\");\n    const accounts = await ethereum.reguest({\n      method: \"eth_accounts\"\n    });\n    console.log(accounts);\n  };\n\n  useEffect(() => {\n    checkWallet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      value: \"test\"\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TransactionProvider;\nexport default TransactionProvider;\n/* class ThemeContextProvider extends Component {\n  state = {\n    isLightTheme: true,\n    light: { syntax: \"#444\" },\n    dark: { syntax: \"#222\" },\n  };\n  render() {\n    return (\n      <ThemeContext.Provider value={{ ...this.state }}>\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\nexport default ThemeContextProvider; */\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"sources":["/Users/nabizadeh.se/Documents/Mina kurser/Frontend/Web Projekt/Coinland/startup/src/contexts/ThemeContext.js"],"names":["React","createContext","Component","ethers","contractABI","contractAddress","TransactionContext","ethereum","window","getEthereumContract","provider","providers","Web3Provider","signer","getSinger","TransactionContract","Contract","console","log","TransactionProvider","children","checkWallet","alert","accounts","reguest","method","useEffect","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,mBAA7C;;AAEA,OAAO,MAAMC,kBAAkB,gBAAGL,aAAa,EAAxC;AACP,MAAM;AAAEM,EAAAA;AAAF,IAAeC,MAArB;AACA;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,SAAP,CAAiBC,YAArB,CAAkCL,QAAlC,CAAjB;AACA,QAAMM,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,QAAMC,mBAAmB,GAAG,IAAIZ,MAAM,CAACa,QAAX,CAC1BX,eAD0B,EAE1BD,WAF0B,EAG1BS,MAH0B,CAA5B;AAKAI,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBG,MAAtB,EAA8BE,mBAA9B;AACD,CATD;;AAWA,MAAMI,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;;AAC5C,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAI,CAACd,QAAL,EAAe,OAAOe,KAAK,CAAC,wBAAD,CAAZ;AACf,UAAMC,QAAQ,GAAG,MAAMhB,QAAQ,CAACiB,OAAT,CAAiB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB,CAAvB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACD,GAJD;;AAKAG,EAAAA,SAAS,CAAC,MAAM;AACdL,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAApC;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdD;;GAAMD,mB;;KAAAA,mB;AAeN,eAAeA,mBAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { createContext, Component } from \"react\";\nimport { ethers } from \"ethers\";\nimport { contractABI, contractAddress } from \"../utils/constans\";\n\nexport const TransactionContext = createContext();\nconst { ethereum } = window;\n/* window.ethereum; */\n\nconst getEthereumContract = () => {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSinger();\n  const TransactionContract = new ethers.Contract(\n    contractAddress,\n    contractABI,\n    signer\n  );\n  console.log(provider, signer, TransactionContract);\n};\n\nconst TransactionProvider = ({ children }) => {\n  const checkWallet = async () => {\n    if (!ethereum) return alert(\"obs, install metamask!\");\n    const accounts = await ethereum.reguest({ method: \"eth_accounts\" });\n    console.log(accounts);\n  };\n  useEffect(() => {\n    checkWallet();\n  }, []);\n  return (\n    <TransactionContext.Provider value={{ value: \"test\" }}>\n      {children}\n    </TransactionContext.Provider>\n  );\n};\nexport default TransactionProvider;\n\n/* class ThemeContextProvider extends Component {\n  state = {\n    isLightTheme: true,\n    light: { syntax: \"#444\" },\n    dark: { syntax: \"#222\" },\n  };\n  render() {\n    return (\n      <ThemeContext.Provider value={{ ...this.state }}>\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\nexport default ThemeContextProvider; */\n"]},"metadata":{},"sourceType":"module"}